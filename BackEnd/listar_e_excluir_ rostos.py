from aws_clientes import rekognition_client
from config import COLLECTION_ID
import logging

# Configura√ß√£o do Rekognition
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')

def listar_rostos():
    """Lista todos os rostos cadastrados na cole√ß√£o do Rekognition."""

    if not rekognition_client:
        logger.error("Cliente Rekogntion n√£o inicializado.")
        return

    response = rekognition_client.list_faces(CollectionId=COLLECTION_ID)
    faces = response.get("Faces", [])

    if not faces:
        print("‚úÖ Nenhum rosto encontrado na cole√ß√£o.")

    else:
        print("üìå Rostos cadastrados:")
        for face in faces:
            print(f"- FaceId: {face['FaceId']}, Nome: {face.get('ExternalImageId', 'Sem nome')}")


def excluir_todos_os_rostos():
    """Exclui todos os rostos cadastrados na cole√ß√£o."""

    if not rekognition_client:
        logger.error("Cliente Rekognition n√£o inicializado.")
        return

    response = rekognition_client.list_faces(CollectionId=COLLECTION_ID)
    faces = response.get("Faces", [])

    if not faces:
        print("‚úÖ Nenhum rosto para excluir.")
        return

    face_ids = [face["FaceId"] for face in faces]  # Coleta todos os FaceIds
    rekognition_client.delete_faces(CollectionId=COLLECTION_ID, FaceIds=face_ids)  # Exclui os rostos

    print("‚úÖ Todos os rostos foram removidos da cole√ß√£o.")

if __name__ == "__main__": # Adiciona prote√ß√£o para execu√ß√£o direta

    if rekognition_client:
        listar_rostos()
        excluir_todos_os_rostos() # Comente ou adicione uma confirma√ß√£o
        
    else:
        logger.error("Cliente Rekognition n√£o dispon√≠vel para listar/excluir rostos.")

